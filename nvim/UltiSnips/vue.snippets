extends html, javascript, css, scss

snippet vue
<template>
	<div class="`!v Kebabcase(expand("%:t:r"))`">
		<div class="`!v Kebabcase(expand("%:t:r"))`__container">
		</div>
	</div>
</template>

<script>
import { mapGetters } from "vuex";
export default {
  name: '`!v Kebabcase(expand("%:t:r"))`',
  components: {
  },
	props: {},
  data() {
    return {
    };
  },
  computed: {
		...mapGetters([])
  },
  methods: {
  }
};
</script>

<style scoped lang="scss">
.`!v Kebabcase(expand("%:t:r"))` {
	&__container {
	}
}
</style>
endsnippet

snippet vstyle
<style lang="scss" scoped>
	$0
</style>
endsnippet

snippet vscript
export default {
  name: '`!v expand("%:t:r")`',
  components: {
  },
	props: [],
  data() {
    return {
    };
  },
  computed: {
  },
  methods: {
  },
};
endsnippet

snippet m
${1:${VISUAL}}($2) {
	$0
},
endsnippet

snippet class
class="`!v Kebabcase(expand("%:t:r"))`__$0"
endsnippet

snippet .class "" i
.`!v Kebabcase(expand("%:t:r"))`$0
endsnippet

snippet vmodal
<template>
	<transition name="modal">
		<div class="`!v Kebabcase(expand("%:t:r"))` modal mmodal">
			<div class="modal-mask">
				<div class="modal-wrapper" @click.self="$emit('close')">
					<div class="`!v Kebabcase(expand("%:t:r"))`__container modal-container">
						<div class="`!v Kebabcase(expand("%:t:r"))`__header modal-header space-between acenter flex">
							<h2>Modal name</h2>
							<cXbutton @click.native="$emit('close')" />
						</div>
						<div class="`!v Kebabcase(expand("%:t:r"))`__body modal-body">
							Modal content
						</div>
						<div class="`!v Kebabcase(expand("%:t:r"))`__footer modal-footer flex jcenter mt25">
							<cButton >
								Button
							</cButton>
						</div>
					</div>
				</div>
			</div>
		</div>
	</transition>
</template>
endsnippet

snippet delete
delete(id) {
	confirmation("Are you sure?", success => {
		if (!success) return;
		this.$http.delete(Routes.$1(id)).then(
			() => {
				this.flashMessage.success({
					title: "Service",
					message: "Was removed"
				});
			},
			response => {
				this.flashMessage.error({
					title: "Failure in removing the service",
					message: response.body.toString()
				});
			}
		);
	});
}
endsnippet


snippet cinput
<cInput
	v-model="$0"
	name=""
	:submit-path=""
	submit-model=""
/>
endsnippet
